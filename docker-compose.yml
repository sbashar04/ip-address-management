version: '2'

services:
  nginx:
    container_name: ipam_nginx
    build:
      context: ./docker/nginx/
      args:
        - PHP_UPSTREAM=php
    volumes:
      - ./logs/nginx/:/var/log/nginx
      - ./docker/nginx/sites:/etc/nginx/sites-available
      - ./app/server:/var/www/html/
      - ./app/client/dist/client:/var/www/ipam-frontend/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php
    networks:
      - frontend
      - backend

  angular:
    container_name: ipam_angular
    build: ./app/client
    ports:
      - "4200:4200"
    volumes:
      - ./app/client:/usr/src/app
    networks:
      - frontend

  php:
    build: ./docker/php/${PHP_VERSION}
    container_name: ipam_php
    volumes:
      - ./app/server:/var/www/html
    links:
      - ipam_mysql8
    networks:
      - backend

  ipam_mysql8:
    image: mysql:8.0
    container_name: ipam_mysql8
    build:
      context: ./docker/mysql8
    ports:
      - "${DB_PORT_MYSQL_8}:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - TZ=${DB_TIMEZONE}
    volumes:
      - ./docker/mysql8/conf.d:/etc/mysql/conf.d:ro
      - ./docker/mysql8/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./backup/mysql8/logs:/var/log/mysql:rw
      - ./backup/mysql8/data:/var/lib/mysql
    networks:
      - backend

  adminer:
    container_name: ipam_adminer
    image: adminer:${ADMINER_VERSION}-standalone
    ports:
      - ${ADMINER_PORT}:8080
    env_file:
      - .env
    links:
      - ipam_mysql8
    networks:
      - backend

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"
